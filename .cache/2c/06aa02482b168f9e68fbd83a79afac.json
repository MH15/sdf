{"id":"core/index.ts","dependencies":[{"name":"/Users/matthewhall/github/mh15/sdf/package.json","includedInParent":true,"mtime":1605837848184},{"name":"regl","loc":{"line":3,"column":19},"parent":"/Users/matthewhall/github/mh15/sdf/core/index.ts","resolved":"/Users/matthewhall/github/mh15/sdf/node_modules/regl/dist/regl.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar REGL = require(\"regl\");\n\nvar regl = REGL(document.getElementById(\"regl\")); // This clears the color buffer to black and the depth buffer to 1\n\nregl.clear({\n  color: [0, 0, 0, 1],\n  depth: 1\n});\nvar draw = regl({\n  frag: \"\\n    precision highp float;\\n\\n    uniform vec2 u_resolution;\\n    uniform vec2 u_mouse;\\n    uniform float u_time;\\n\\n    float plot(vec2 st, float pct){\\n      return  smoothstep( pct-0.02, pct, st.y) -\\n              smoothstep( pct, pct+0.02, st.y);\\n    }\\nfloat sdCircle(in vec2 p, in vec2 pos, float radius)\\n{\\n    return length(p-pos)-radius;\\n}\\n\\nfloat sdBox(in vec2 p, in vec2 pos, in vec2 size)\\n{\\n    vec2 d = abs(p-pos)-size;\\n    return min(0.0, max(d.x, d.y))+length(max(d,0.0));\\n}\\n\\n// polynomial smooth min (k = 0.1);\\nfloat sminCubic(float a, float b, float k)\\n{\\n    float h = max(k-abs(a-b), 0.0);\\n    return min(a, b) - h*h*h/(6.0*k*k);\\n}\\n\\nfloat opU(float d1, float d2)\\n{\\n    return min(d1, d2);\\n}\\n\\nfloat opBlend(float d1, float d2)\\n{\\n    float k = 0.2;\\n    return sminCubic(d1, d2, k);\\n}\\n\\nfloat opSmoothUnion( float d1, float d2, float k ) {\\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\\n\\n\\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\\n{\\n    r.xy = (p.x>0.0)?r.xy : r.zw;\\n    r.x  = (p.y>0.0)?r.x  : r.y;\\n    vec2 q = abs(p)-b+r.x;\\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\\n}\\n\\nfloat opRound( in vec2 p, in float r )\\n{\\n  return sdBox(p, vec2(1., 0.), vec2(.1)) - r;\\n}\\n\\nfloat opRoundBox( in vec2 p, in vec2 pos, in vec2 size, in float r )\\n{\\n  return sdBox(p, pos, size) - r;\\n}\\n// https://www.shadertoy.com/view/ll2GD3\\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d)\\n{\\n    t = clamp(t, 0., 1.);\\n    return a + b*cos(6.28318*(c*t+d));\\n}\\n\\n\\nvec3 shade(float sd)\\n{\\n    float maxDist = 2.0;\\n    vec3 palCol = palette(clamp(0.5-sd*0.4, -maxDist,maxDist), \\n                      vec3(0.3,0.3,0.0),vec3(0.8,0.8,0.1),vec3(0.9,0.7,0.0),vec3(0.3,0.9,0.8));\\n\\n    vec3 col = palCol;\\n    \\n    // Darken around surface\\n\\tcol = mix(col, col*1.0-exp(-10.0*abs(sd)), 0.4);\\n\\t// repeating lines\\n    col *= 0.8 + 0.2*cos(150.0*sd);\\n    // White outline at surface\\n    col = mix(col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(sd)));\\n    \\n    return col;\\n}\\n\\n\\nfloat sdf(vec2 p)\\n{\\n    float d = 1000.0;\\n    \\n    float a = sdCircle(p, vec2(0., 0.), 0.35);\\n    //float b = sdCircle(p, vec2( 0.7 + sin(iTime/2.)/2., 0.1), 0.55);\\n    //float c = sdBox(p, vec2( -0.7 + sin(iTime/2.)/2., -.4), vec2(.5));\\n    \\n    //return sminCubic(sminCubic(a,b,.2),c,.6);\\n    \\n   //float a = sdBox(p, vec2(0., -1.), vec2(.5));\\n    //float a = opRoundBox(p, vec2(1,1), vec2(.5),.1);\\n    float b = opRoundBox(p, vec2(-1,0), vec2(.5),.1);\\n\\treturn opSmoothUnion(a,b,.4); \\n\\n\\treturn a;\\n}\\n\\nvec2 screenToWorld(vec2 screen)\\n{\\n    vec2 result = 2.0 * (screen/u_resolution.xy - 0.5);\\n    result.x *= u_resolution.x/u_resolution.y;\\n    return result;\\n}\\n\\nvoid main(){\\n  vec2 st = gl_FragCoord.xy/u_resolution;\\n\\n  float y = st.x;\\n\\n  vec3 color = vec3(y);\\n\\n  // Plot a line\\n  float pct = plot(st,y);\\n  color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\\n\\n  gl_FragColor = vec4(st.x,st.y,0.0,1.0);\\n\\n  vec2 fragCoord = gl_FragCoord.xy;\\n\\n    // project screen coordinate into world\\n\\tvec2 p = screenToWorld(fragCoord);\\n    \\n    // signed distance for scene\\n    float sd = sdf(p);\\n\\n// compute signed distance to a colour\\n    vec3 col = shade(sd);\\n\\n\\tgl_FragColor = vec4(col, 1.0);\\n\\n\\t//if (distance(fragCoord, vec2(0,0)) < 1000.) {\\n\\t//\\tgl_FragColor = vec4(1,0,0,0);\\n\\t//}\\n\\n}\\n\\n\\n  \",\n  vert: \"\\n    attribute vec2 position;\\n    void main(){\\n      gl_Position = vec4(position, 0, 1);\\n    }\\n  \",\n  count: 4,\n  primitive: 'triangle fan',\n  uniforms: {\n    //@ts-ignore\n    u_resolution: regl.prop('resolution')\n  },\n  attributes: {\n    position: [[-1, -1], [-1, 1], [1, 1], [1, -1]]\n  }\n});\nregl.frame(function () {\n  var resolution = [window.innerWidth, window.innerHeight];\n  draw({\n    resolution: resolution\n  });\n});"},"sourceMaps":{"js":{"mappings":[{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":8}},{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":11}},{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":18}},{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":19}},{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":25}},{"source":"core/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":26}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":9,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":9,"column":8}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":9,"column":11}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":15}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":9,"column":16}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":24},"generated":{"line":9,"column":24}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":25},"generated":{"line":9,"column":25}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":9,"column":39}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":40},"generated":{"line":9,"column":40}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":9,"column":46}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":47}},{"source":"core/index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":48}},{"source":"core/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":50}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":11,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":5},"generated":{"line":11,"column":5}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":10}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":11,"column":11}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":12,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":12,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":12,"column":7}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":12,"column":9}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":12},"generated":{"line":12,"column":10}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":12,"column":11}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":15},"generated":{"line":12,"column":13}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":12,"column":14}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":12,"column":16}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":12,"column":17}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":21},"generated":{"line":12,"column":19}},{"source":"core/index.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":12,"column":20}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":12,"column":21}},{"source":"core/index.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":7,"column":9},"generated":{"line":13,"column":7}},{"source":"core/index.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":13,"column":9}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":14,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":14,"column":1}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":6},"generated":{"line":15,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":15,"column":8}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":15,"column":11}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":17},"generated":{"line":15,"column":15}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":15,"column":16}},{"source":"core/index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":16,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":16,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":16,"column":6}},{"source":"core/index.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":16,"column":8}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":16,"column":3471}},{"source":"core/index.ts","name":null,"original":{"line":162,"column":4},"generated":{"line":17,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":162,"column":4},"generated":{"line":17,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":162,"column":8},"generated":{"line":17,"column":6}},{"source":"core/index.ts","name":null,"original":{"line":162,"column":10},"generated":{"line":17,"column":8}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":17,"column":112}},{"source":"core/index.ts","name":null,"original":{"line":169,"column":4},"generated":{"line":18,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":169,"column":4},"generated":{"line":18,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":169,"column":9},"generated":{"line":18,"column":7}},{"source":"core/index.ts","name":null,"original":{"line":169,"column":11},"generated":{"line":18,"column":9}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":18,"column":10}},{"source":"core/index.ts","name":null,"original":{"line":170,"column":4},"generated":{"line":19,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":170,"column":4},"generated":{"line":19,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":170,"column":13},"generated":{"line":19,"column":11}},{"source":"core/index.ts","name":null,"original":{"line":170,"column":15},"generated":{"line":19,"column":13}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":19,"column":27}},{"source":"core/index.ts","name":null,"original":{"line":172,"column":4},"generated":{"line":20,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":172,"column":4},"generated":{"line":20,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":172,"column":12},"generated":{"line":20,"column":10}},{"source":"core/index.ts","name":null,"original":{"line":172,"column":14},"generated":{"line":20,"column":12}},{"source":"core/index.ts","name":null,"original":{"line":173,"column":8},"generated":{"line":21,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":8},"generated":{"line":22,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":8},"generated":{"line":22,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":20},"generated":{"line":22,"column":16}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":22},"generated":{"line":22,"column":18}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":26},"generated":{"line":22,"column":22}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":27},"generated":{"line":22,"column":23}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":22},"generated":{"line":22,"column":27}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":32},"generated":{"line":22,"column":28}},{"source":"core/index.ts","name":null,"original":{"line":174,"column":22},"generated":{"line":22,"column":40}},{"source":"core/index.ts","name":null,"original":{"line":172,"column":14},"generated":{"line":23,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":23,"column":3}},{"source":"core/index.ts","name":null,"original":{"line":177,"column":4},"generated":{"line":24,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":177,"column":4},"generated":{"line":24,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":177,"column":14},"generated":{"line":24,"column":12}},{"source":"core/index.ts","name":null,"original":{"line":177,"column":16},"generated":{"line":24,"column":14}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":8},"generated":{"line":25,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":8},"generated":{"line":25,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":16},"generated":{"line":25,"column":12}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":18},"generated":{"line":25,"column":14}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":12},"generated":{"line":25,"column":15}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":13},"generated":{"line":25,"column":16}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":14},"generated":{"line":25,"column":17}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":12},"generated":{"line":25,"column":18}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":17},"generated":{"line":25,"column":20}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":18},"generated":{"line":25,"column":21}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":12},"generated":{"line":25,"column":22}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":18},"generated":{"line":25,"column":23}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":22},"generated":{"line":25,"column":25}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":23},"generated":{"line":25,"column":26}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":24},"generated":{"line":25,"column":27}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":22},"generated":{"line":25,"column":28}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":27},"generated":{"line":25,"column":30}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":22},"generated":{"line":25,"column":31}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":18},"generated":{"line":25,"column":32}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":31},"generated":{"line":25,"column":34}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":32},"generated":{"line":25,"column":35}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":31},"generated":{"line":25,"column":36}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":35},"generated":{"line":25,"column":38}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":31},"generated":{"line":25,"column":39}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":18},"generated":{"line":25,"column":40}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":39},"generated":{"line":25,"column":42}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":40},"generated":{"line":25,"column":43}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":39},"generated":{"line":25,"column":44}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":43},"generated":{"line":25,"column":46}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":44},"generated":{"line":25,"column":47}},{"source":"core/index.ts","name":null,"original":{"line":179,"column":39},"generated":{"line":25,"column":48}},{"source":"core/index.ts","name":null,"original":{"line":178,"column":18},"generated":{"line":25,"column":49}},{"source":"core/index.ts","name":null,"original":{"line":177,"column":16},"generated":{"line":26,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":27,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":17},"generated":{"line":27,"column":1}},{"source":"core/index.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":27,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":184,"column":0},"generated":{"line":28,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":184,"column":4},"generated":{"line":28,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":184,"column":5},"generated":{"line":28,"column":5}},{"source":"core/index.ts","name":null,"original":{"line":184,"column":0},"generated":{"line":28,"column":10}},{"source":"core/index.ts","name":null,"original":{"line":184,"column":11},"generated":{"line":28,"column":11}},{"source":"core/index.ts","name":null,"original":{"line":184,"column":11},"generated":{"line":28,"column":23}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":4},"generated":{"line":29,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":8},"generated":{"line":29,"column":6}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":18},"generated":{"line":29,"column":16}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":21},"generated":{"line":29,"column":19}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":22},"generated":{"line":29,"column":20}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":28},"generated":{"line":29,"column":26}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":29},"generated":{"line":29,"column":27}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":21},"generated":{"line":29,"column":37}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":41},"generated":{"line":29,"column":39}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":47},"generated":{"line":29,"column":45}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":48},"generated":{"line":29,"column":46}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":21},"generated":{"line":29,"column":57}},{"source":"core/index.ts","name":null,"original":{"line":185,"column":4},"generated":{"line":29,"column":58}},{"source":"core/index.ts","name":null,"original":{"line":186,"column":4},"generated":{"line":30,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":186,"column":4},"generated":{"line":30,"column":2}},{"source":"core/index.ts","name":null,"original":{"line":186,"column":8},"generated":{"line":30,"column":6}},{"source":"core/index.ts","name":null,"original":{"line":186,"column":9},"generated":{"line":30,"column":7}},{"source":"core/index.ts","name":null,"original":{"line":187,"column":8},"generated":{"line":31,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":187,"column":8},"generated":{"line":31,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":187,"column":18},"generated":{"line":31,"column":14}},{"source":"core/index.ts","name":null,"original":{"line":187,"column":18},"generated":{"line":31,"column":16}},{"source":"core/index.ts","name":null,"original":{"line":186,"column":9},"generated":{"line":32,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":186,"column":8},"generated":{"line":32,"column":3}},{"source":"core/index.ts","name":null,"original":{"line":186,"column":4},"generated":{"line":32,"column":4}},{"source":"core/index.ts","name":null,"original":{"line":189,"column":1},"generated":{"line":33,"column":0}},{"source":"core/index.ts","name":null,"original":{"line":184,"column":0},"generated":{"line":33,"column":1}}],"sources":{"core/index.ts":"import REGL = require('regl')\n\nlet regl = REGL(document.getElementById(\"regl\"))\n// This clears the color buffer to black and the depth buffer to 1\nregl.clear({\n    color: [0, 0, 0, 1],\n    depth: 1\n})\n\nconst draw = regl({\n    frag: `\n    precision highp float;\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_mouse;\n    uniform float u_time;\n\n    float plot(vec2 st, float pct){\n      return  smoothstep( pct-0.02, pct, st.y) -\n              smoothstep( pct, pct+0.02, st.y);\n    }\nfloat sdCircle(in vec2 p, in vec2 pos, float radius)\n{\n    return length(p-pos)-radius;\n}\n\nfloat sdBox(in vec2 p, in vec2 pos, in vec2 size)\n{\n    vec2 d = abs(p-pos)-size;\n    return min(0.0, max(d.x, d.y))+length(max(d,0.0));\n}\n\n// polynomial smooth min (k = 0.1);\nfloat sminCubic(float a, float b, float k)\n{\n    float h = max(k-abs(a-b), 0.0);\n    return min(a, b) - h*h*h/(6.0*k*k);\n}\n\nfloat opU(float d1, float d2)\n{\n    return min(d1, d2);\n}\n\nfloat opBlend(float d1, float d2)\n{\n    float k = 0.2;\n    return sminCubic(d1, d2, k);\n}\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\n\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nfloat opRound( in vec2 p, in float r )\n{\n  return sdBox(p, vec2(1., 0.), vec2(.1)) - r;\n}\n\nfloat opRoundBox( in vec2 p, in vec2 pos, in vec2 size, in float r )\n{\n  return sdBox(p, pos, size) - r;\n}\n// https://www.shadertoy.com/view/ll2GD3\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d)\n{\n    t = clamp(t, 0., 1.);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\n\nvec3 shade(float sd)\n{\n    float maxDist = 2.0;\n    vec3 palCol = palette(clamp(0.5-sd*0.4, -maxDist,maxDist), \n                      vec3(0.3,0.3,0.0),vec3(0.8,0.8,0.1),vec3(0.9,0.7,0.0),vec3(0.3,0.9,0.8));\n\n    vec3 col = palCol;\n    \n    // Darken around surface\n\tcol = mix(col, col*1.0-exp(-10.0*abs(sd)), 0.4);\n\t// repeating lines\n    col *= 0.8 + 0.2*cos(150.0*sd);\n    // White outline at surface\n    col = mix(col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(sd)));\n    \n    return col;\n}\n\n\nfloat sdf(vec2 p)\n{\n    float d = 1000.0;\n    \n    float a = sdCircle(p, vec2(0., 0.), 0.35);\n    //float b = sdCircle(p, vec2( 0.7 + sin(iTime/2.)/2., 0.1), 0.55);\n    //float c = sdBox(p, vec2( -0.7 + sin(iTime/2.)/2., -.4), vec2(.5));\n    \n    //return sminCubic(sminCubic(a,b,.2),c,.6);\n    \n   //float a = sdBox(p, vec2(0., -1.), vec2(.5));\n    //float a = opRoundBox(p, vec2(1,1), vec2(.5),.1);\n    float b = opRoundBox(p, vec2(-1,0), vec2(.5),.1);\n\treturn opSmoothUnion(a,b,.4); \n\n\treturn a;\n}\n\nvec2 screenToWorld(vec2 screen)\n{\n    vec2 result = 2.0 * (screen/u_resolution.xy - 0.5);\n    result.x *= u_resolution.x/u_resolution.y;\n    return result;\n}\n\nvoid main(){\n  vec2 st = gl_FragCoord.xy/u_resolution;\n\n  float y = st.x;\n\n  vec3 color = vec3(y);\n\n  // Plot a line\n  float pct = plot(st,y);\n  color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n\n  gl_FragColor = vec4(st.x,st.y,0.0,1.0);\n\n  vec2 fragCoord = gl_FragCoord.xy;\n\n    // project screen coordinate into world\n\tvec2 p = screenToWorld(fragCoord);\n    \n    // signed distance for scene\n    float sd = sdf(p);\n\n// compute signed distance to a colour\n    vec3 col = shade(sd);\n\n\tgl_FragColor = vec4(col, 1.0);\n\n\t//if (distance(fragCoord, vec2(0,0)) < 1000.) {\n\t//\tgl_FragColor = vec4(1,0,0,0);\n\t//}\n\n}\n\n\n  `,\n\n\n\n    vert: `\n    attribute vec2 position;\n    void main(){\n      gl_Position = vec4(position, 0, 1);\n    }\n  `,\n\n    count: 4,\n    primitive: 'triangle fan',\n\n    uniforms: {\n        //@ts-ignore\n        u_resolution: regl.prop('resolution')\n    },\n\n    attributes: {\n        position: [\n            [-1, -1], [-1, 1], [1, 1], [1, -1]\n        ]\n    }\n})\n\nregl.frame(() => {\n    let resolution = [window.innerWidth, window.innerHeight]\n    draw({\n        resolution\n    })\n})"},"lineCount":null}},"error":null,"hash":"5eaca575429849b495614e0700ac52c9","cacheData":{"env":{}}}